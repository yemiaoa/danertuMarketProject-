//
//  SellShopManageViewController.m
//  单耳兔
//
//  Created by yang on 15/6/30.
//  Copyright (c) 2015年 无锡恩梯梯数据有限公司. All rights reserved.
//
//卖家中心->店铺管理

#import "SellShopManageViewController.h"
#import "SellShopCell.h"
#import "Waiting.h"
#import "AFHTTPRequestOperation.h"
#import "UIView+Toast.h"
#import "AsynImageView.h"
#import "NoItemView.h"
#import "SDRefreshFooterView.h"

@interface SellShopManageViewController ()
{
    int addStatusBarHeight;
    UITableView *_tableView;
    UILabel *TCountLabel;
    UILabel *WCountLabel;
    NSCache *imageCache;
    AsynImageView *portraitImage;
    UILabel *shopNameLable;
    UILabel *sufShopName;
    UILabel *linkmanName;
    NSString *telephoneNums;
    NoItemView *noItemView;
    SDRefreshFooterView *refreshFooter;
    NSInteger _totalPageCount;
    NSInteger pageIndex;
    NSMutableArray *dataSource;
}
@end

@implementation SellShopManageViewController
@synthesize shopKeeperDic;

- (void)viewDidLoad {
    [super viewDidLoad];
    // Do any additional setup after loading the view.

    [self initView];
    [self setupFooter];
    [self loadShopListData];
    [self loadSufShopData];
}

-(NSString*)getTitle{
    return @"店铺管理";
}

-(void)onClickBack{
    [self.navigationController popViewControllerAnimated:YES];
}

-(void)setupFooter{
    refreshFooter = [SDRefreshFooterView refreshView];
    [refreshFooter addToScrollView:_tableView];
    [refreshFooter addTarget:self refreshAction:@selector(footerRefresh)];
}

- (void)footerRefresh
{
    dispatch_after(dispatch_time(DISPATCH_TIME_NOW, (int64_t)(2 * NSEC_PER_SEC)), dispatch_get_main_queue(), ^{
        [refreshFooter endRefreshing];
        if (_totalPageCount == pageIndex) {
            return;
        }
        pageIndex = pageIndex + 1;
        [self loadShopListData];
    });
}

-(void)initView{
    
    addStatusBarHeight = [TopNaviViewController getStatusBarHeight];
    [self.view setBackgroundColor:[UIColor colorWithRed:248.0/255 green:248.0/255 blue:248.0/255 alpha:1]];
    
    imageCache  = [[NSCache alloc] init];
    dataSource  = [[NSMutableArray alloc] init];
    telephoneNums = @"";
    pageIndex = 1;
    _totalPageCount = 1;
    
    _tableView = [[UITableView alloc] initWithFrame:CGRectMake(0, addStatusBarHeight+TOPNAVIHEIGHT, MAINSCREEN_WIDTH, MAINSCREEN_HEIGHT - addStatusBarHeight-TOPNAVIHEIGHT)];
    _tableView.separatorStyle = UITableViewCellSeparatorStyleSingleLine;
    _tableView.backgroundColor = [UIColor clearColor];
    [Tools setExtraCellLineHidden:_tableView];
    _tableView.delegate = self;
    _tableView.dataSource = self;
    [self.view addSubview:_tableView];
    
    UIView *headerView = [[UIView alloc] init];
    headerView.frame = CGRectMake(0, 0, MAINSCREEN_WIDTH, 150);
    headerView.backgroundColor = TABLEBGCOLOR;
    headerView.userInteractionEnabled = YES;
    
    UIImageView *profileBg = [[UIImageView alloc] initWithImage:[UIImage imageNamed:@"sellshop_bg.png"]];
    [headerView addSubview:profileBg];
    profileBg.contentMode = UIViewContentModeScaleAspectFill;
    profileBg.frame = CGRectMake(0, 0, MAINSCREEN_WIDTH, 100);
    profileBg.userInteractionEnabled = YES;
    
    //头像
    portraitImage = [[AsynImageView alloc] initWithFrame:CGRectMake(20, 10, 80, 80)];
    [profileBg addSubview:portraitImage];
    portraitImage.layer.cornerRadius = 80 / 2.0;
    portraitImage.layer.masksToBounds = YES;
    NSString *imageUrl = [NSString stringWithFormat:@"%@%@/%@",MEMBERPRODUCT,[[[NSUserDefaults standardUserDefaults] valueForKey:@"userLoginInfo"] valueForKey:@"MemLoginID"],[[shopKeeperDic valueForKey:@"shopDataKey"] valueForKey:@"EntityImage"]];
    if ([[[shopKeeperDic valueForKey:@"shopDataKey"] valueForKey:@"EntityImage"] isEqualToString:@""]) {
        imageUrl = @"";
        portraitImage.placeholderImage = [UIImage imageNamed:@"shop_sell_default"];
    }else{
        //已存在商品图片
        portraitImage.imageURL         = imageUrl;
    }
    
    //店名
    shopNameLable = [[UILabel alloc] initWithFrame:CGRectMake(115, 10, 190, 30)];
    [profileBg addSubview:shopNameLable];
    [shopNameLable setBackgroundColor:[UIColor clearColor]];
    [shopNameLable setText:[NSString stringWithFormat:@"%@",[[shopKeeperDic valueForKey:@"shopDataKey"] valueForKey:@"ShopName"]]];
    [shopNameLable setFont:[UIFont fontWithName:@"Helvetica-Bold" size:16.0]];
    [shopNameLable setTextColor:[UIColor whiteColor]];
    
    //虚线
    CAShapeLayer *shapeLayer = [CAShapeLayer layer];
    [shapeLayer setBounds:self.view.bounds];
    [shapeLayer setPosition:self.view.center];
    [shapeLayer setFillColor:[[UIColor clearColor] CGColor]];
    // 设置虚线颜色为black
    [shapeLayer setStrokeColor:[[UIColor colorWithRed:223/255.0 green:223/255.0 blue:223/255.0 alpha:1.0f] CGColor]];
    // 3.0f设置虚线的宽度
    [shapeLayer setLineJoin:kCALineJoinRound];
    // 3=线的宽度 1=每条线的间距
    [shapeLayer setLineDashPattern:[NSArray arrayWithObjects:[NSNumber numberWithInt:1],[NSNumber numberWithInt:1],nil]];
    // Setup the path
    CGMutablePathRef path = CGPathCreateMutable();
    int line_Y = iOS7 ? 50 : 30;
    CGPathMoveToPoint(path, NULL, 115, line_Y);       //100 ,67 初始点 x,y
    CGPathAddLineToPoint(path, NULL, 310,line_Y);     //67终点x,y
    [shapeLayer setPath:path];
    CGPathRelease(path);
    [[profileBg layer] addSublayer:shapeLayer];
    
    NSArray *itemArr = @[@"体验店",@"网店"];
    NSInteger itemCount = itemArr.count;
    NSInteger labelWide = (MAINSCREEN_WIDTH-125)/2;
    for (int i = 0; i < itemCount; i ++) {
        UILabel *itemLabel = [[UILabel alloc] initWithFrame:CGRectMake(115+i*labelWide, 75, labelWide, 20)];
        [profileBg addSubview:itemLabel];
        [itemLabel setBackgroundColor:[UIColor clearColor]];
        [itemLabel setText:[itemArr objectAtIndex:i]];
        [itemLabel setFont:[UIFont fontWithName:@"Helvetica-Bold" size:12.0]];
        [itemLabel setTextAlignment:NSTextAlignmentCenter];
        [itemLabel setTextColor:[UIColor whiteColor]];
    }
    
    TCountLabel = [[UILabel alloc] initWithFrame:CGRectMake(115, 50, labelWide, 30)];
    [profileBg addSubview:TCountLabel];
    [TCountLabel setBackgroundColor:[UIColor clearColor]];
    [TCountLabel setFont:[UIFont fontWithName:@"Helvetica-Bold" size:18.0]];
    [TCountLabel setTextAlignment:NSTextAlignmentCenter];
    [TCountLabel setTextColor:[UIColor whiteColor]];
    
    WCountLabel = [[UILabel alloc] initWithFrame:CGRectMake(115+labelWide, 50, labelWide, 30)];
    [profileBg addSubview:WCountLabel];
    [WCountLabel setBackgroundColor:[UIColor clearColor]];
    [WCountLabel setFont:[UIFont fontWithName:@"Helvetica-Bold" size:18.0]];
    [WCountLabel setTextAlignment:NSTextAlignmentCenter];
    [WCountLabel setTextColor:[UIColor whiteColor]];
    
    UIView *bordLine = [[UIView alloc] initWithFrame:CGRectMake(115+labelWide, 60, 0.8, 30)];
    [profileBg addSubview:bordLine];
    [bordLine setBackgroundColor:BORDERCOLOR];
    
    //黄色背景
    UIView *topSegmentView = [[UIView alloc] initWithFrame:CGRectMake(0, 100, MAINSCREEN_WIDTH, 50)];
    [headerView addSubview:topSegmentView];
    topSegmentView.userInteractionEnabled = YES;
    [topSegmentView setBackgroundColor:[UIColor colorWithRed:253/255.0 green:118/255.0 blue:47/255.0 alpha:1.0]];
    
    NSArray *tempArr = @[@"上级店铺:",@"联系人:"];
    NSInteger tempCount = tempArr.count;
    for (int i = 0; i < tempCount; i ++) {
        UILabel *itemLabel = [[UILabel alloc] initWithFrame:CGRectMake(0, 5+i*20, 65, 20)];
        [topSegmentView addSubview:itemLabel];
        [itemLabel setBackgroundColor:[UIColor clearColor]];
        [itemLabel setText:tempArr[i]];
        [itemLabel setFont:[UIFont fontWithName:@"Helvetica-Bold" size:12.0]];
        [itemLabel setTextAlignment:NSTextAlignmentRight];
        [itemLabel setTextColor:[UIColor whiteColor]];
    }
    //上级店铺
    sufShopName = [[UILabel alloc] initWithFrame:CGRectMake(70, 5, 180, 20)];
    [topSegmentView addSubview:sufShopName];
    [sufShopName setBackgroundColor:[UIColor clearColor]];
    [sufShopName setFont:[UIFont fontWithName:@"Helvetica-Bold" size:12.0]];
    [sufShopName setTextColor:[UIColor whiteColor]];
    //联系人
    linkmanName = [[UILabel alloc] initWithFrame:CGRectMake(70, 25, 180, 20)];
    [topSegmentView addSubview:linkmanName];
    [linkmanName setBackgroundColor:[UIColor clearColor]];
    [linkmanName setFont:[UIFont fontWithName:@"Helvetica-Bold" size:12.0]];
    [linkmanName setTextColor:[UIColor whiteColor]];
    
    UIView *line = [[UIView alloc] initWithFrame:CGRectMake(MAINSCREEN_WIDTH-60, 10, 0.8, 30)];
    [topSegmentView addSubview:line];
    [line setBackgroundColor:BORDERCOLOR];
    
    UIImageView *teleImage = [[UIImageView alloc] initWithFrame:CGRectMake(MAINSCREEN_WIDTH-45, 10, 30, 30)];
    [topSegmentView addSubview:teleImage];
    [teleImage setImage:[UIImage imageNamed:@"icon_phone"]];
    teleImage.userInteractionEnabled = YES;
    
    UITapGestureRecognizer *tap = [[UITapGestureRecognizer alloc] initWithTarget:self action:@selector(callOnTelephone)];
    [topSegmentView addGestureRecognizer:tap];
    
    _tableView.tableHeaderView = headerView;
    
    float itemY = addStatusBarHeight + TOPNAVIHEIGHT +220;
    noItemView = [[NoItemView alloc] initWithY:itemY Image:[UIImage imageNamed:@"noOrder"] mes:@"代理伙伴正在路上"];
    [self.view addSubview:noItemView];
    [noItemView setHidden:YES];
}

//查询店铺列表
-(void)loadShopListData{
    
    [Waiting show];
    NSDictionary * params  = @{@"apiid": @"0228",@"shopid" : [[[NSUserDefaults standardUserDefaults] valueForKey:@"userLoginInfo"] valueForKey:@"MemLoginID"],@"pagesize":@10,@"pageindesx":[NSString stringWithFormat:@"%ld",(long)pageIndex]};
    NSURLRequest * request = [[AFOSCClient sharedClient] requestWithMethod:@"POST"
                                                                      path:@""
                                                                parameters:params];
    AFHTTPRequestOperation * operation = [[AFOSCClient sharedClient] HTTPRequestOperationWithRequest:request success:^(AFHTTPRequestOperation *operation, id responseObject) {

        [Waiting dismiss];
       
        NSDictionary *tempDic = [NSJSONSerialization JSONObjectWithData:responseObject options:NSJSONReadingMutableLeaves error:nil];
        
        NSString *tCountStr = [NSString stringWithFormat:@"%@",[tempDic valueForKey:@"tcount"] ? [tempDic valueForKey:@"tcount"] : @"0"];
        NSString *wCountStr = [NSString stringWithFormat:@"%@",[tempDic valueForKey:@"wCount"] ? [tempDic valueForKey:@"wCount"] : @"0"];

        //只在加载第一页数据时 加载网店数量
        if (pageIndex == 1) {
            [TCountLabel setText:tCountStr];
            [WCountLabel setText:wCountStr];
        }
        
        if ([tCountStr isEqualToString:@"0"]&&[wCountStr isEqualToString:@"0"]) {
            [noItemView setHidden:NO];
            _tableView.scrollEnabled = NO;
            return ;
        }
        
         _totalPageCount = [[tempDic valueForKey:@"TotalPageCount_o"] integerValue];
        //列表有数据时 刷新列表
        [dataSource addObjectsFromArray:[[tempDic valueForKey:@"shopList"] valueForKey:@"shopBean"]];
        _tableView.scrollEnabled = YES;
        [_tableView reloadData];
        
    } failure:^(AFHTTPRequestOperation *operation, NSError *error) {
        
        [Waiting dismiss];
        [self.view makeToast:@"请检查网络连接是否正常" duration:2.0 position:@"center"];
         NSLog(@"faild , error == %@ ", error);
    }];
    [operation start];
    
}

- (void)loadSufShopData{
    [Waiting show];
    NSDictionary * params  = @{@"apiid": @"0245",@"shopid" : [[[NSUserDefaults standardUserDefaults] valueForKey:@"userLoginInfo"] valueForKey:@"MemLoginID"]};
    NSURLRequest * request = [[AFOSCClient sharedClient] requestWithMethod:@"POST"
                                                                      path:@""
                                                                parameters:params];
    AFHTTPRequestOperation * operation = [[AFOSCClient sharedClient] HTTPRequestOperationWithRequest:request success:^(AFHTTPRequestOperation *operation, id responseObject) {
        [Waiting dismiss];
        NSDictionary *tempDic = [NSJSONSerialization JSONObjectWithData:responseObject options:NSJSONReadingMutableLeaves error:nil];
        NSString *sufStr = [NSString stringWithFormat:@"%@",[[[[tempDic valueForKey:@"LeaderInfo"] valueForKey:@"LeaderBean"] objectAtIndex:0] valueForKey:@"ShopName"]];
        NSString *linkmanStr = [NSString stringWithFormat:@"%@",[[[[tempDic valueForKey:@"LeaderInfo"] valueForKey:@"LeaderBean"] objectAtIndex:0] valueForKey:@"RealName"]];
        if ([sufStr isEqualToString:@""]) {
            sufStr = @"--";
        }
        if ([linkmanStr isEqualToString:@""]) {
            linkmanStr = @"--";
        }
        sufShopName.text = sufStr;
        linkmanName.text = linkmanStr;
        telephoneNums = [NSString stringWithFormat:@"%@",[[[[tempDic valueForKey:@"LeaderInfo"] valueForKey:@"LeaderBean"] objectAtIndex:0] valueForKey:@"Mobile"]];
    } failure:^(AFHTTPRequestOperation *operation, NSError *error) {
        [Waiting dismiss];
        [self.view makeToast:@"请检查网络连接是否正常" duration:2.0 position:@"center"];
    }];
    [operation start];
}

- (void)callOnTelephone{
    if ([telephoneNums isEqualToString:@""]) {
        [self.view makeToast:@"联系人电话不存在!" duration:1.2 position:@"center"];
        return;
    }
    UIAlertView *alert = [[UIAlertView alloc] initWithTitle:@"" message:[NSString stringWithFormat:@"店铺电话:%@",telephoneNums] delegate:self cancelButtonTitle:@"取消" otherButtonTitles:nil];
    [alert addButtonWithTitle:@"拨打"];
    [alert setTag:12];
    [alert show];

}
#pragma mark UIAlertViewDelegate
- (void)alertView:(UIAlertView *)alertView didDismissWithButtonIndex:(NSInteger)buttonIndex
{
    if (buttonIndex == 1) {
        [[UIApplication sharedApplication] openURL:[NSURL URLWithString:[NSString stringWithFormat:@"tel://%@",telephoneNums]]];
    }
}

#pragma mark UITableViewDataSource
- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    return [[[dataSource valueForKey:@"shopList"] valueForKey:@"shopBean"] count];
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    static NSString *cellIndentifier = @"cellIndentifier";
    SellShopCell *cell = (SellShopCell*)[_tableView cellForRowAtIndexPath:indexPath];
    if (!cell) {
        cell = [[SellShopCell alloc]initWithStyle:UITableViewCellStyleDefault reuseIdentifier:cellIndentifier];
        cell.selectionStyle = UITableViewCellSelectionStyleNone;
    }
    int index = (int)[indexPath row];
    NSDictionary *tempDic = [NSDictionary dictionaryWithDictionary:[dataSource objectAtIndex:index]];
    
    if (![tempDic valueForKey:@"shopID"] || ![tempDic valueForKey:@"EntityImage"]) {
        cell.shopImage.image = [UIImage imageNamed:@"noData1"];
    }else{
        NSString *imgUrl = [NSString stringWithFormat:@"%@/Member/%@/%@",IMAGESERVER,[tempDic valueForKey:@"shopID"],[tempDic valueForKey:@"EntityImage"]];
        
        if ([[tempDic valueForKey:@"EntityImage"] isEqualToString:@""]) {
            imgUrl = @"";
        }
        
        NSString *imageKey = [NSString stringWithFormat:@"%@%d",imgUrl,index];
        AsynImageView *image = [imageCache objectForKey:imageKey];
        if (image) {
            cell.shopImage = image;
        }else{
            if ([[tempDic valueForKey:@"EntityImage"] isEqualToString:@""]) {
                imgUrl = @"";
                 cell.shopImage.placeholderImage = [UIImage imageNamed:@"noData1"];
            }else{
                cell.shopImage.imageURL = imgUrl;
            }
        }
    }
    cell.shopNameLabel.text   = [NSString stringWithFormat:@"%@",[tempDic valueForKey:@"shopName"]];
    cell.shopNumberLabel.text = [NSString stringWithFormat:@"%@",[tempDic valueForKey:@"nCount"]];
    
    return cell;
}

#pragma mark UITableViewDelegate
- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath
{
    return 80;
}

//- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
//{
//    [tableView deselectRowAtIndexPath:indexPath animated:YES];
//}

- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

@end
