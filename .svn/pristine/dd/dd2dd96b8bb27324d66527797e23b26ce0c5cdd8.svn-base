//
//  WebViewController.m
//  Tuan
//
//  Created by 夏 华 on 12-7-6.
//  Copyright (c) 2012年 无锡恩梯梯数据有限公司. All rights reserved.
//
#import "ClassifyDetailController.h"
@interface ClassifyDetailController(){
    UIView *classifyAreaView;
    UIView *classifyView;
    NSMutableArray *secondThreeArr;
    NSMutableArray *allTypeArrayArr;//所有分类数据,组成的大数组,没有的分类则加载,有的话,直接读
    NSDictionary *finalTypeDic;
    UIScrollView *leftClassifyView;//左侧二级分类
    UIScrollView *adsScrollView;//右侧广告
    UIPageControl *pageControl;//广告分页
    NSArray *slideImages;//广告图片数组
    UIScrollView *rightClassifyView;//右侧三级分类(右侧下半部分,上部分是广告图滑动)
    NSTimer *myTimer;//定时器
    NSString *goWoodsListKeyWord;
    DataModle *specialShopModle;
    int danertuWoodsSegmentNo;//单耳兔商城酒分类tag
    int currentClassifyIndex;
    int currentTwoClassifyIndex;
    BOOL isClassifyWoods;//是否是分类商品,可能是广告的链接泉眼商品
}
@end

@implementation ClassifyDetailController

@synthesize addStatusBarHeight;
@synthesize topNaviClassifyText;
@synthesize selectTypeDic;
@synthesize classifyDataArr;//来自另一个view传值
@synthesize defaults;
@synthesize shopID;

- (void)loadView
{
    [super loadView];
    // If you create your views manually, you MUST override this method and use it to create your views.
    // If you use Interface Builder to create your views, then you must NOT override this method.
}

- (void)viewDidLoad
{
    [super viewDidLoad];
    addStatusBarHeight = STATUSBAR_HEIGHT;
    self.view.backgroundColor = VIEWBGCOLOR;
    defaults = [NSUserDefaults standardUserDefaults];//读取本地化存储
    //分类有可能属于某家店铺
    //分类有可能属于某家店铺
    if (!self.shopID) {
        [defaults removeObjectForKey:@"currentShopInfo"];
    }
    
    isClassifyWoods = YES;
    //二三级分类数组的  数组,都存起来就不必重复加载  已经加载过的数据
    allTypeArrayArr = [[NSMutableArray alloc] init];
    secondThreeArr = [[NSMutableArray alloc] init];//二三级分类数组
    
    //----返回----
    UIButton *goBack = [[UIButton alloc] initWithFrame:CGRectMake(10, 2+addStatusBarHeight, 53.5, 40)];
    [self.view addSubview:goBack];
    [goBack setBackgroundImage:[UIImage imageNamed:@"gobackBtn"] forState:UIControlStateNormal];
    [goBack addTarget:self action:@selector(onClickBack) forControlEvents:UIControlEventTouchUpInside];
    
    //分类,可以点击
    UIView *classifyBlock = [[UIView alloc] initWithFrame:CGRectMake(70, 0+addStatusBarHeight, 60, TOPNAVIHEIGHT)];
    [self.view addSubview:classifyBlock];
    UITapGestureRecognizer *singleTap =[[UITapGestureRecognizer alloc]initWithTarget:self action:@selector(showClassify)];
    [classifyBlock addGestureRecognizer:singleTap];//---添加大图片点击事件
    
    //文字
    topNaviClassifyText = [[UILabel alloc] initWithFrame:CGRectMake(0, 12, 50, 25)];
    [classifyBlock addSubview:topNaviClassifyText];
    topNaviClassifyText.backgroundColor = [UIColor clearColor];
    topNaviClassifyText.text = [selectTypeDic objectForKey:@"Name"];
    topNaviClassifyText.font = [UIFont systemFontOfSize:18];
    topNaviClassifyText.textColor = [UIColor whiteColor];
    topNaviClassifyText.userInteractionEnabled = YES;//这样才可以点击
    [topNaviClassifyText setNumberOfLines:1];
    [topNaviClassifyText sizeToFit];//自适应
    
    
    CGRect frame = topNaviClassifyText.frame;
    UIImageView *imgView = [[UIImageView alloc] initWithFrame:CGRectMake(frame.size.width, 20, 10, 10)];
    [classifyBlock addSubview:imgView];
    imgView.image = [UIImage imageNamed:@"classifyTopImg"];
    
    int classifyAreaViewHeight = CONTENTHEIGHT+49;
    classifyAreaView = [[UIView alloc] initWithFrame:CGRectMake(0, TOPNAVIHEIGHT+addStatusBarHeight, MAINSCREEN_WIDTH, classifyAreaViewHeight)];
    [self.view addSubview:classifyAreaView];//----分类----,插到底层view
    classifyAreaView.backgroundColor = VIEWBGCOLOR;
    
    //右侧上部分广告图
    [self createAdsView];
    int adsViewHeight = adsScrollView.frame.size.height;
    
    //左侧二级分类
    leftClassifyView = [[UIScrollView alloc] initWithFrame:CGRectMake(0, adsViewHeight, 100, classifyAreaViewHeight - adsViewHeight)];
    [classifyAreaView addSubview:leftClassifyView];//----分类----,插到底层view
    leftClassifyView.showsVerticalScrollIndicator = NO;
    leftClassifyView.userInteractionEnabled = YES;
    
    
    
    //右侧下部分三级分类
    rightClassifyView = [[UIScrollView alloc] initWithFrame:CGRectMake(100, adsViewHeight, 220, classifyAreaViewHeight - adsViewHeight)];
    [classifyAreaView addSubview:rightClassifyView];//----分类----,插到底层view
    rightClassifyView.backgroundColor = [UIColor whiteColor];
    //头部分类下啦,弹出层------
    NSInteger count = [classifyDataArr count];
    if ([[[classifyDataArr lastObject] objectForKey:@"Name"] isEqualToString:@"线下提货点产品"]) {
        count -= 1;//---减1处理,,,,这里去掉  最后的    线下提货点产品
    }
    int itemH = 40;
    int itemW = 120;
    //头部第一分类,下拉选择项
    classifyView = [[UIView alloc] initWithFrame:CGRectMake(70, TOPNAVIHEIGHT+addStatusBarHeight, itemW, itemH*count)];
    //
    [self.view addSubview:classifyView];
    classifyView.hidden = YES;
    classifyView.userInteractionEnabled = YES;//这样才可以点击
    classifyView.backgroundColor = [UIColor colorWithRed:0.1 green:0.1 blue:0.1 alpha:0.8];
    for (int i = 0; i < count; i++) {
        //顺便初始化,@""代替占位符
        [allTypeArrayArr addObject:@""];
        UIView *item = [[UIView alloc] initWithFrame:CGRectMake(0, itemH*i, itemW, itemH)];
        [classifyView addSubview:item];
        item.tag = 100 + i;
        UITapGestureRecognizer *singleTap =[[UITapGestureRecognizer alloc]initWithTarget:self action:@selector(selectClassify:)];
        [item addGestureRecognizer:singleTap];//---添加大图片点击事件
        
        UILabel *itemText = [[UILabel alloc] initWithFrame:CGRectMake(0, 0, itemW, itemH)];
        [item addSubview:itemText];
        itemText.text = [classifyDataArr[i] objectForKey:@"Name"];
        itemText.backgroundColor = [UIColor clearColor];
        itemText.textColor = [UIColor whiteColor];
        itemText.textAlignment = NSTextAlignmentCenter;
        if (i<count-1) {
            UILabel *border = [[UILabel alloc] initWithFrame:CGRectMake(0,itemH-1, itemW, 1)];
            [item addSubview:border];
            border.backgroundColor = BORDERCOLOR;
        }
    }
    //----当前分类,二级分类
    currentClassifyIndex = [[selectTypeDic objectForKey:@"indexTag"] intValue];
    currentTwoClassifyIndex = 0;
    //获取二级分类,绘制主界面,先加载主页面,后加载弹出层
    [self getClassifyData:[selectTypeDic objectForKey:@"ID"] index:currentClassifyIndex];
    
}

- (void)viewWillDisappear:(BOOL)animated {
    [super viewWillDisappear:animated];
    [myTimer invalidate];
    //代理置空，否则会闪退
    if ([self.navigationController respondsToSelector:@selector(interactivePopGestureRecognizer)]) {
        self.navigationController.interactivePopGestureRecognizer.delegate = nil;
    }
}

- (void)viewDidAppear:(BOOL)animated {
    [super viewDidAppear:animated];
    //开启iOS7的滑动返回效果
    if ([self.navigationController respondsToSelector:@selector(interactivePopGestureRecognizer)]) {
        //只有在二级页面生效
        if ([self.navigationController.viewControllers count] == 2) {
            self.navigationController.interactivePopGestureRecognizer.enabled = YES;
            self.navigationController.interactivePopGestureRecognizer.delegate = self;
        }
    }
}

- (void)navigationController:(UINavigationController *)navigationController didShowViewController:(UIViewController *)viewController animated:(BOOL)animated {
    //开启滑动手势
    if ([navigationController respondsToSelector:@selector(interactivePopGestureRecognizer)]) {
        navigationController.interactivePopGestureRecognizer.enabled = YES;
    }
}

//创建广告视图
-(void)createAdsView{
    
    CGFloat adsScrollViewWith = MAINSCREEN_WIDTH;
    CGFloat adsScrollViewHeight = adsScrollViewWith / 8.0 * 3;
    adsScrollView = [[UIScrollView alloc] initWithFrame:CGRectMake(0, 0, adsScrollViewWith, adsScrollViewHeight)];
    adsScrollView.bounces = YES;
    adsScrollView.pagingEnabled = YES;
    adsScrollView.delegate = self;
    adsScrollView.tag = 100;//------页面还有其他scrollview,区分多个scrollview
    adsScrollView.userInteractionEnabled = YES;
    adsScrollView.showsHorizontalScrollIndicator = NO;
    [classifyAreaView addSubview:adsScrollView];
    // 初始化 数组 并添加四张图片
    slideImages = @[@"quanyanwenquan1227.jpg",@"manxiangting1227.jpg",@"quanlinshanzhuang1227.jpg",@"hongjiu.jpg",@"tuhaochun.jpg",@"xiaozhenxiang.jpg"];
    
    
    // 初始化 pagecontrol
    pageControl = [[UIPageControl alloc]initWithFrame:CGRectMake((adsScrollViewWith - 100) / 2.0,adsScrollViewHeight-20,100,18)]; // 初始化mypagecontrol
    [pageControl setCurrentPageIndicatorTintColor:BUTTONCOLOR];
    [pageControl setPageIndicatorTintColor:[UIColor grayColor]];
    pageControl.numberOfPages = [slideImages count];
    pageControl.currentPage = 0;
    [pageControl addTarget:self action:@selector(turnPage) forControlEvents:UIControlEventValueChanged]; // 触摸mypagecontrol触发change这个方法事件
    [classifyAreaView addSubview:pageControl];
    
    // 创建四个图片 imageview
    for (int i = 0;i<[slideImages count];i++)
    {
        UIImageView *imageView = [[UIImageView alloc] initWithImage:[UIImage imageNamed:[slideImages objectAtIndex:i]]];
        imageView.frame = CGRectMake(adsScrollViewWith * i, 0, adsScrollViewWith, adsScrollViewHeight);
        imageView.tag = 100 + i;
        imageView.userInteractionEnabled = YES;
        imageView.layer.masksToBounds = YES;
        imageView.contentMode = UIViewContentModeScaleAspectFill;
        UITapGestureRecognizer *tapImg = [[UITapGestureRecognizer alloc] initWithTarget:self action:@selector(tapAds:)];
        [imageView addGestureRecognizer:tapImg];
        [adsScrollView addSubview:imageView]; // 首页是第0页,默认从第1页开始的。
    }
    
    [adsScrollView setContentSize:CGSizeMake(adsScrollViewWith * [slideImages count], adsScrollViewHeight)]; //  +上第1页和第4页  原理：4-[1-2-3-4]-1
    [adsScrollView setContentOffset:CGPointMake(0, 0)];
    //--------定时器,广告图片切换--------
    myTimer = [NSTimer scheduledTimerWithTimeInterval:4 target:self selector:@selector(turnPage) userInfo:nil repeats:YES];
}
//-----点击广告图-----
-(void)tapAds:(id)sender{
    NSInteger tag = [[sender view] tag] - 100;
    switch (tag) {
        case 0:{
            goWoodsListKeyWord = @"泉眼温泉";
            isClassifyWoods  = NO;
            
            WoodDataController *wood = [[WoodDataController alloc] init];
            wood.hidesBottomBarWhenPushed = YES;
            if(isClassifyWoods){
                wood.selectTypeDic = finalTypeDic;
            }else{
                wood.searchKeyWord = goWoodsListKeyWord;
            }
            [self.navigationController pushViewController:wood animated:YES];
            break;
        }
        case 1:
            [self goToSpecialShop:@"满庭湘"];
            break;
        case 2:
            [self goToSpecialShop:@"泉林旅游度假"];
            break;
        case 3:danertuWoodsSegmentNo = 2;
            [self onClickDanertuItem];
            break;
        case 4:danertuWoodsSegmentNo = 5;
            [self onClickDanertuItem];
            break;
        case 5:danertuWoodsSegmentNo = 1;
            [self onClickDanertuItem];
            break;
        default:
            break;
    }
    
}
//------跳转到  单耳兔商品
-(void)onClickDanertuItem{
    [defaults removeObjectForKey:@"currentShopInfo"];//---默认当前店铺
    if(![defaults objectForKey:@"userLoginInfo"]){
        
        LoginViewController *loginV = [[LoginViewController alloc] init];
        loginV.hidesBottomBarWhenPushed = YES;
        [self.navigationController pushViewController:loginV animated:YES];
    }else{
        
        DanertuWoodsController *danController = [[DanertuWoodsController alloc] init];
        danController.currentSegmentNo = danertuWoodsSegmentNo;
        danController.hidesBottomBarWhenPushed = YES;
        [self.navigationController pushViewController:danController animated:YES];
    }
}

//------pageController---------广告轮播图----------
// pagecontrol 选择器的方法,-----这里没有执行-----
- (void)turnPage
{
    int scrollWidth = adsScrollView.frame.size.width;
    if (pageControl.currentPage==slideImages.count-1) {
        pageControl.currentPage = 0;
        //---------消失-------
        [myTimer invalidate];
    }else{
        pageControl.currentPage += 1; // 获取当前的page
    }
    NSInteger page = pageControl.currentPage ;
    [adsScrollView scrollRectToVisible:CGRectMake(scrollWidth*page,0,scrollWidth,adsScrollView.frame.size.height) animated:YES]; // 触摸pagecontroller那个点点 往后翻一页 +1
}
// 广告轮播滑动,,,,,,,,,,scrollview 委托函数
- (void)scrollViewDidEndDecelerating:(UIScrollView *)scrollViewTmp
{
    CGFloat pagewidth = adsScrollView.frame.size.width;
    int page = floor((adsScrollView.contentOffset.x - pagewidth/[slideImages count])/pagewidth)+1;
    pageControl.currentPage = page;
    NSLog(@"ajiogregijoepoebijthjtro----------%d",page);
}


//-----获取二级级分类---
-(void)getClassifyData:(NSString *)selectTypeId index:(int) paramsTag{
    if (!selectTypeId) {
        selectTypeId = @"";
    }
    [Waiting show];//----loading
    //判断是否加载过此数据
    if ([allTypeArrayArr[paramsTag] isKindOfClass:[NSString class]]) {
        
        AFHTTPClient *httpClient = [[AFHTTPClient alloc] initWithBaseURL:[NSURL URLWithString:APIURL]];
        //--------读取二级分类-------
        NSDictionary * params = @{@"apiid": @"0074",@"firstid":selectTypeId};
        NSURLRequest * request = [httpClient requestWithMethod:@"POST"
                                                          path:@""
                                                    parameters:params];
        AFHTTPRequestOperation * operation = [httpClient HTTPRequestOperationWithRequest:request success:^(AFHTTPRequestOperation *operation, id responseObject) {
            
//            NSString *source = [[NSString alloc] initWithData:responseObject encoding:NSUTF8StringEncoding];
            
            NSDictionary *jsonData = [NSJSONSerialization JSONObjectWithData:responseObject options:NSJSONReadingMutableLeaves error:nil];
            NSArray *secondTypeDataArr = [[jsonData objectForKey:@"secondCategoryList"] objectForKey:@"secondCategorybean"];
            //secondTypeDataArr
            NSInteger secondeTypeCount = secondTypeDataArr.count;
            __block NSInteger requestCount = secondeTypeCount;
            //利用  @"",占位,再把有效数据按位置替换,
            NSInteger secondThreeArrCount = secondThreeArr.count;
            //第一次加载 secondThreeArr数组为空,直接添加占位,
            //更多次加载,数组中包含了前一次数据,这里要处理,删除多余,或添加缺少的,或不变
            //以保证secondThreeArr和secondTypeDataArr元素个数相等
            if (secondThreeArrCount>0) {
                if (secondThreeArrCount>secondeTypeCount) {
                    int start = 0;
                    int length = 0;
                    start = secondeTypeCount;
                    length = secondThreeArrCount - secondeTypeCount;
                    [secondThreeArr removeObjectsInRange:NSMakeRange(start, length)];
                }else if(secondThreeArrCount<secondeTypeCount){
                    for (int i=secondThreeArrCount;i<secondeTypeCount;i++) {
                        [secondThreeArr addObject:@""];
                    }
                }
            }else{
                for (int i=0;i<secondeTypeCount;i++) {
                    [secondThreeArr addObject:@""];
                }
            }
            if (secondeTypeCount>0) {
                for (int i=0;i<secondeTypeCount;i++) {
                    NSDictionary *item = secondTypeDataArr[i];
                    NSMutableDictionary *secondThreeItem = [[NSMutableDictionary alloc] init];
                    [secondThreeItem setObject:[item objectForKey:@"ID"] forKey:@"secondId"];
                    [secondThreeItem setObject:[item objectForKey:@"Name"] forKey:@"secondName"];
                    //------循环读取每个二级分类对应的三级分类-------并写入数组
                    NSDictionary * params = @{@"apiid": @"0094",@"firstid":[item objectForKey:@"ID"]};
                    NSURLRequest * request = [httpClient requestWithMethod:@"POST"
                                                                      path:@""
                                                                parameters:params];
                    AFHTTPRequestOperation * operationItem = [httpClient HTTPRequestOperationWithRequest:request success:^(AFHTTPRequestOperation *operationItem, id responseObject) {
                        NSString *source = [[NSString alloc] initWithData:responseObject encoding:NSUTF8StringEncoding];
                        NSLog(@"ogprthre0033kkFrweirstView------locationString---------:%@--%@",params,source);
                        NSDictionary *jsonData = [NSJSONSerialization JSONObjectWithData:responseObject options:NSJSONReadingMutableLeaves error:nil];
                        NSArray *threeTypeDataArr = [[jsonData objectForKey:@"secondCategoryList"] objectForKey:@"secondCategorybean"];
                        if (threeTypeDataArr.count>0) {
                            [secondThreeItem setObject:threeTypeDataArr forKey:@"threeArr"];
                            //请求不到threeTypeDataArr,  该字段就为空,只有二级分类,没有三级分类
                        }
                        
                        [secondThreeArr replaceObjectAtIndex:i withObject:secondThreeItem];
                        
                        //计数 --
                        requestCount--;
                        //计数变0,表示所有请求完成,可以加载view,可能每次请求都是空
                        if (requestCount==0) {
                            NSMutableArray *secondThreeArrTmp = [secondThreeArr mutableCopy];
                            //------删除没有三级分类的-----
                            for (NSDictionary *threeItem in secondThreeArr) {
                                if (![threeItem objectForKey:@"threeArr"]) {
                                    [secondThreeArrTmp removeObject:threeItem];
                                }
                            }
                            
                            [allTypeArrayArr replaceObjectAtIndex:paramsTag withObject:secondThreeArrTmp];
                            NSLog(@"jgejojewonvoijthy------1---%@--%@--%d",secondThreeArrTmp,allTypeArrayArr,paramsTag);
                            [self createContentView];
                        }
                    }failure:^(AFHTTPRequestOperation *operation, NSError *error) {
                        NSLog(@"faild , error == %@ ", error);
                        [self.view makeToast:@"网络错误请重试" duration:1.5 position:@"center"];
                        [Waiting dismiss];
                    }];
                    [operationItem start];
                }
            }else{
                //移除之前的就得
                NSArray *classifyAreaViewSubV = [classifyAreaView subviews];
                if (classifyAreaViewSubV.count>0) {
                    for (UIView *tmp in classifyAreaViewSubV) {
                        [tmp removeFromSuperview];
                    }
                }
                //没有更多分类数据
                [Waiting dismiss];
            }
        }failure:^(AFHTTPRequestOperation *operation, NSError *error) {
            NSLog(@"faild , error == %@ ", error);
            [self.view makeToast:@"网络错误请重试" duration:1.5 position:@"center"];
        }];
        [operation start];
    }else{
        [self createContentView];
        NSLog(@"jgejojewonvoijthy------1--%@--%d",allTypeArrayArr,paramsTag);
    }
}
//-----返回
-(void)onClickBack{
    [self.navigationController popViewControllerAnimated:YES];
    NSLog(@"----backLogin---图片被点击!------");
}
//-----展示分类
-(void)showClassify{
    NSLog(@"jbrjokfopjojgri");
    classifyView.hidden = !classifyView.hidden;
}
//-----选择其他分类
-(void)selectClassify:(id)sender{
    int tag = [[sender view] tag]-100;
    classifyView.hidden = YES;
    if (tag!=currentClassifyIndex) {
        currentClassifyIndex = tag;
        topNaviClassifyText.text = [classifyDataArr[tag] objectForKey:@"Name"];
        //----调整文字,小标大小------
        [topNaviClassifyText sizeToFit];
        CGRect frame = topNaviClassifyText.frame;
        //父view
        UIView *parentV = [topNaviClassifyText superview];
        UIImageView *imgView = [[parentV subviews] objectAtIndex:1];
        imgView.frame = CGRectMake(frame.size.width, 20, 10, 10);
        
        parentV.frame = CGRectMake(70, 0, frame.size.width+10, TOPNAVIHEIGHT);
        NSLog(@"bioejgiorhr---%d",tag);
        //选择分类,之后重新加载数据
        [self getClassifyData:[classifyDataArr[tag] objectForKey:@"ID"] index:tag];
    }
}
//-----构建分类view
-(void)createContentView{
    //每次构建分类之前把三级分类当前的默认做第一个
    currentTwoClassifyIndex = 0;
    NSArray *dataArr = allTypeArrayArr[currentClassifyIndex];
    //删除之前的view,,,重新创建
    NSArray *leftClassifyViewSubV = [leftClassifyView subviews];
    if (leftClassifyViewSubV.count>0) {
        for (UIView *tmp in leftClassifyViewSubV) {
            [tmp removeFromSuperview];
        }
    }
    NSArray *rightClassifyViewSubV = [rightClassifyView subviews];
    if (rightClassifyViewSubV.count>0) {
        for (UIView *tmp in rightClassifyViewSubV) {
            [tmp removeFromSuperview];
        }
    }
    
    NSLog(@"gptorjhppjofjewpod-----%@",dataArr);
    int dataCount = dataArr.count;
    int leftPartItemWith = leftClassifyView.frame.size.width;
    int leftPartItemHeight = 100;//--默认--100,
    int leftPartItemHeight_ = leftClassifyView.frame.size.height/dataCount;
    if (leftPartItemHeight<leftPartItemHeight_) {
        //数据较少时,为了填充满,上下居中,选择  leftPartItemHeight_
        leftPartItemHeight = leftPartItemHeight_;
    }
    int scrollContentHeight = leftClassifyView.frame.size.height;
    if (scrollContentHeight<leftPartItemHeight*dataCount) {
        scrollContentHeight = leftPartItemHeight*dataCount;
    }
    //这里每次都要执行,防止被上次的影响  数据较多,高度可能超出屏幕高度,
    leftClassifyView.contentSize = CGSizeMake(leftClassifyView.frame.size.width, scrollContentHeight);
    //构建左侧分类项目--------
    for (int i=0;i<dataCount;i++) {
        NSDictionary *item = [dataArr objectAtIndex:i];
        UILabel *itemLb = [[UILabel alloc] initWithFrame:CGRectMake(0, leftPartItemHeight*i, leftPartItemWith, leftPartItemHeight)];
        itemLb.font = [UIFont fontWithName:@"Helvetica" size:16.0];
        [leftClassifyView addSubview:itemLb];
        itemLb.numberOfLines = 3;
        itemLb.tag = 100 + i;
        itemLb.text = [item objectForKey:@"secondName"];
        itemLb.textAlignment = NSTextAlignmentCenter;
        
        UITapGestureRecognizer *tapLb = [[UITapGestureRecognizer alloc] initWithTarget:self action:@selector(selectTwoClassify:)];
        itemLb.userInteractionEnabled = YES;
        [itemLb addGestureRecognizer:tapLb];
        
        if (i==0) {
            //---默认选中的第一个--
            itemLb.textColor = [UIColor redColor];
            itemLb.backgroundColor = [UIColor whiteColor];
            //---这里构建右侧下部分分类显示----
            [self createRightPartView];
        }else{
            itemLb.textColor = [UIColor grayColor];
            itemLb.backgroundColor = [UIColor clearColor];
        }
        //-----边线-----
        UIView *lineV = [[UIView alloc] initWithFrame:CGRectMake(0, leftPartItemHeight*(i+1)-1, leftPartItemWith, 1)];
        [leftClassifyView addSubview:lineV];
        lineV.backgroundColor = [UIColor grayColor];
    }
    //-----左侧右边线-----
    UIView *leftLineV = [[UIView alloc] initWithFrame:CGRectMake(leftPartItemWith-1, 0, 1, scrollContentHeight)];
    [leftClassifyView addSubview:leftLineV];
    leftLineV.backgroundColor = [UIColor grayColor];
    //-----这里处理完毕,隐藏loading-------
    [Waiting dismiss];
}
//-----构建三级分类
-(void)createRightPartView{
    //---这里构建右侧下部分分类显示----
    NSDictionary *item = allTypeArrayArr[currentClassifyIndex][currentTwoClassifyIndex];
    int threeClassifyHeight = 80;//三级分类的item高
    double threeBtnCount = [[item objectForKey:@"threeArr"] count];
    rightClassifyView.contentSize = CGSizeMake(rightClassifyView.frame.size.width, threeClassifyHeight*threeBtnCount);
    NSLog(@"jaiogrojgoikfoepkpg------%@",NSStringFromCGSize(rightClassifyView.contentSize));
    for (int j=0;j<threeBtnCount;j++) {
        NSDictionary *threeData = [[item objectForKey:@"threeArr"] objectAtIndex:j];
        UIView *threeBtn = [[UIView alloc] initWithFrame:CGRectMake(10,threeClassifyHeight*j,rightClassifyView.frame.size.width-20,threeClassifyHeight)];
        [rightClassifyView addSubview:threeBtn];
        threeBtn.tag = 100+j;
        threeBtn.accessibilityIdentifier = @"threeBtn";
        
        UITapGestureRecognizer *tap = [[UITapGestureRecognizer alloc] initWithTarget:self action:@selector(goClassifyWoodView:)];
        threeBtn.userInteractionEnabled = YES;
        [threeBtn addGestureRecognizer:tap];
        
        UIImageView *itemIcon = [[UIImageView alloc] initWithFrame:CGRectMake(10, (threeClassifyHeight-50)/2, 50,50)];
        [threeBtn addSubview:itemIcon];///
        [itemIcon sd_setImageWithURL:[NSURL URLWithString:[NSString stringWithFormat:@"%@%@",CLASSIFYIMG,[threeData objectForKey:@"PhoneImage"]]]  placeholderImage:[UIImage imageNamed:@"noData1"]];
        UILabel *itemTextLb = [[UILabel alloc] initWithFrame:CGRectMake(70, 15,threeBtn.frame.size.width-70 ,50)];
        [threeBtn addSubview:itemTextLb];
        itemTextLb.text = [threeData objectForKey:@"Name"];
        itemTextLb.font = TEXTFONT;
        itemTextLb.numberOfLines = 2;
        //-----虚线------
        UIImageView *border = [[UIImageView alloc] initWithFrame:CGRectMake(0,threeBtn.frame.size.height-1,threeBtn.frame.size.width,1)];
        [threeBtn addSubview:border];
        border.image = [UIImage imageNamed:@"horizonBorder"];
    }
}

//选择二级分类
-(void)selectTwoClassify:(id)sender{
    UILabel *itemLb = (UILabel *)[sender view];
    int tag = [itemLb tag] - 100;
    if (tag!=currentTwoClassifyIndex) {
        NSArray *rightClassifyViewSubV = [rightClassifyView subviews];
        if (rightClassifyViewSubV.count>0) {
            for (UIView *tmp in rightClassifyViewSubV) {
                [tmp removeFromSuperview];
            }
        }
        //---取消旧的
        UILabel *oldLb = (UILabel *)[[[sender view] superview] viewWithTag:currentTwoClassifyIndex+100];
        oldLb.textColor = [UIColor grayColor];
        oldLb.backgroundColor = [UIColor clearColor];
        //---重置新的
        itemLb.textColor = [UIColor redColor];
        itemLb.backgroundColor = [UIColor whiteColor];
        //---view样式搞好之后,赋值新的currentTwoClassifyIndex
        currentTwoClassifyIndex = tag;
        [self createRightPartView];
    }
}
//-----跳转到商品页面-----
-(void)goClassifyWoodView:(id)sender{
    int tag = [[sender view] tag] - 100;
    
    NSDictionary *tmp = [[[[allTypeArrayArr objectAtIndex:currentClassifyIndex] objectAtIndex:currentTwoClassifyIndex] objectForKey:@"threeArr"] objectAtIndex:tag];
    finalTypeDic = @{@"ID":[tmp objectForKey:@"ID"],@"Name":[tmp objectForKey:@"Name"],@"indexTag":[NSString stringWithFormat:@"%d",tag]};
    isClassifyWoods = YES;
    
    WoodDataController *wood = [[WoodDataController alloc] init];
    wood.shopID = self.shopID;
    wood.hidesBottomBarWhenPushed = YES;
    if(isClassifyWoods){
        wood.selectTypeDic = finalTypeDic;
    }else{
        wood.searchKeyWord = goWoodsListKeyWord;
    }
    [self.navigationController pushViewController:wood animated:YES];
}
//-----跳转特殊点评-----
-(void)goToSpecialShop:(NSString*)shopNameKeyWord{
    NSDictionary * params = @{@"apiid": @"0044",@"kword":shopNameKeyWord};
    NSString *resultDataKeyPrefix = @"supplierprocuctList";
    NSString *resultDataKeyPrefix1 = @"supplierproductbean";
    
    NSLog(@"locationString---qweq------:%@",params);
    AFHTTPClient *client = [[AFHTTPClient alloc] initWithBaseURL:[NSURL URLWithString:APIURL]];
    NSURLRequest * request = [client requestWithMethod:@"POST"
                                                  path:@""
                                            parameters:params];
    AFHTTPRequestOperation * operation = [client HTTPRequestOperationWithRequest:request success:^(AFHTTPRequestOperation *operation, id responseObject) {
        [Waiting dismiss];//隐藏loading
        NSDictionary *jsonData = [[CJSONDeserializer deserializer]deserialize:responseObject error:nil];
        NSMutableArray *temp = [[jsonData objectForKey:resultDataKeyPrefix] objectForKey:resultDataKeyPrefix1];
        
        if(temp.count>0){
            specialShopModle = [[DataModle alloc] initWithDataDic:[temp objectAtIndex:0]];
            
            DetailViewController *detailController = [[DetailViewController alloc] init];
            detailController.agentid = specialShopModle.id;
            detailController.hidesBottomBarWhenPushed = YES;
            detailController.modle = specialShopModle;
            [self.navigationController pushViewController:detailController animated:YES];
            
        }else{
            [self.view makeToast:@"数据读取错误" duration:1.2 position:@"center"];
        }
    } failure:^(AFHTTPRequestOperation *operation, NSError *error) {
        [Waiting dismiss];//隐藏loading
        [self.view makeToast:@"请检查网络连接,刷新重试" duration:1.2 position:@"center"];
    }];
    [operation start];//-----发起请求------
}
//-----------内存不足报警------
-(void)didReceiveMemoryWarning
{
    [[NSUserDefaults standardUserDefaults] synchronize];
    [super didReceiveMemoryWarning];
    NSLog(@"memory warning,kkappdelegate---");
}
@end
